import {parseWithParentheses} from './parser_rev2.mjs'

const testMap = {
    "1": "1",
    "-1": "-1",
    "1.1": "1.1",
    "-1.1": "-1.1",
    "1+3": "4",
    "-1+3": "2",
    "1.3+3.1": "4.4",
    "-1.3+3.1": "1.8",
    "1+-4.2+3": "-0.2",
    "-1+-4.2+3": "-2.2",

    "1-3": "-2",
    "-1-3": "-4",
    "1.3-3.1": "-1.8",
    "-1.3-3.1": "-4.4",
    "1--4.2-3": "2.2",
    "-1--4.2-3": "0.2",

    "1*3": "3",
    "-1*3": "-3",
    "1.3*3.1": "4.03",
    "-1.3*3.1": "-4.03",
    "1*-4.2*3": "-12.6",
    "-1*-4.2*3": "12.6",

    "1/3": "0.333333333333333",
    "-1/3": "-0.333333333333333",
    "170/17": "10",
    "-170/17": "-10",
    "1.3/3.1": "0.419354838709677",
    "-1.3/3.1": "-0.419354838709677",
    "1/-4.2/3": "-0.079365079365079",
    "-1/-4.2/3": "0.079365079365079",
    "1/3*3": "1",

    "1^3": "1",
    "-1^3": "-1",
    "3^5": "243",
    "-3^5": "-243",
    "3^2^4": "6561",
    "-3^2^4": "6561",

    "3!": "6",

    "3%": "0.03",

    "1+3*4": "13",
    "1*3+4": "7",
    "1+3/4": "1.75",
    "1/3+4": "4.333333333333333",
    "1+3^4": "82",
    "1^3+4": "5",
    "1+3!": "7",
    "1!+3": "4",
    "1+3%": "1.03",
    "1%+3": "3.01",
    "1+3*4^5": "3073",
    "1*3+4^5": "1027",
    "1+3^4*5": "406",
    "1^3+4*5": "21",
    "1+3!*5": "31",
    "1!*3+5": "8",
    "1+3%*5": "1.15",

    "(1+3)*4": "16",
    "(1*3)4": "12",
    "(1+3)/4": "1",
    "(1/3)+4": "4.333333333333333",
    "(1+3)^4": "256",
    "(1^3)+4": "5",
    "((1+3)!)+4": "28",
    "6(1+3)": "24",

    "(5+(3*(8-2)))": "23",
    "((5+3)*(8-2))": "48",
    "((5+3)*(8-2))/4": "12",
    "((5+3)*(8-2))/4^2": "3",
    "((5+3)*(8-2))/4^2*3": "9",
    "((5+3)*(8-2))/4^2*3!": "18",
    "((5+3)*(8-2))/4^2*3!%": "0.18",

    "1+": "",
    "1+*": "",
    "1++": "",
    "1+1+": "",
    "1+1*": "",
    "*1": "",
    "++1": "1",
    "1++1": "2",
    "1+1++1": "3",
    "1+1+1+": "",
    "1+1+1*": "",
    "(1+1+1": "",
    "1+1+1)": "",
    "((1+1+1)+2": "",
}

let fails = 0
for (const [input, expected] of Object.entries(testMap)) {
    try {
        let result = parseWithParentheses(input, 0, 0, false)[0].toNumber().toLocaleString('en-UK', {
            maximumFractionDigits: 15,
            minimumFractionDigits: 0,
            useGrouping: false
        })
        if (result !== expected) {
            console.log(`Test failed: ${input} should be ${expected} but was ${result}`)
            fails++
        }
    } catch (error) {
        if (expected === "") continue
        console.log(`Test failed: ${input} should be ${expected} but threw ${error}`)
        fails++
    }
}

if (fails === 0) {
    console.log("All tests passed!")
} else {
    console.log(`${fails} tests failed!`)
}
